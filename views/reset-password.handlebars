<div class="forgot-password-container">
    <div class="forgot-password-card">
        <div class="auth-logo">
            <img src="/img/Plato_y_copa_logo.jpg" alt="Plato y Copa Logo">
        </div>
        <h2 class="forgot-password-title">Cambiar Contraseña</h2>
        
        {{#if error}}
        <div class="alert alert-danger" role="alert">
            {{error}}
        </div>
        {{/if}}
        
        <p class="forgot-password-subtitle">Ingresa tu nueva contraseña.</p>
        <form id="resetPasswordForm" action="/reset-password" method="POST">
            <input type="hidden" name="token" value="{{token}}">
            <div class="form-group">
                <i class="bi bi-lock form-icon"></i>
                <input type="password" class="form-control" id="newPassword" name="newPassword" placeholder="Nueva contraseña" required>
                <i class="bi bi-eye-slash toggle-password" onclick="togglePassword('newPassword', this)"></i>
            </div>
            <div class="form-group">
                <i class="bi bi-lock-fill form-icon"></i>
                <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" placeholder="Confirmar contraseña" required>
                <i class="bi bi-eye-slash toggle-password" onclick="togglePassword('confirmPassword', this)"></i>
            </div>
            <button type="submit" class="btn btn-reset">Cambiar Contraseña</button>
        </form>
        <div class="back-to-login">
            <a href="/auth">Volver al inicio de sesión</a>
        </div>
    </div>
</div>

<style>
/* Estilos para la página de cambio de contraseña */
.forgot-password-container {
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, rgba(0, 0, 0, 0.9), rgba(0, 0, 0, 0.7)), url('/img/Evento-1.jpg');
    background-size: cover;
    background-position: center;
    padding: 20px;
}

.forgot-password-card {
    width: 100%;
    max-width: 450px;
    background: linear-gradient(145deg, rgba(17, 17, 17, 0.95), rgba(0, 0, 0, 0.95));
    border-radius: var(--border-radius);
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.5);
    padding: 40px 30px;
    border: 1px solid var(--gold-border);
    position: relative;
    overflow: hidden;
}

.forgot-password-card::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 5px;
    background: linear-gradient(to right, var(--gold), var(--gold-dark));
}

.auth-logo {
    text-align: center;
    margin-bottom: 30px;
}

.auth-logo img {
    height: 80px;
    border-radius: 10px;
    border: 2px solid var(--gold-border);
    transition: all 0.3s ease;
}

.auth-logo img:hover {
    transform: scale(1.05);
    box-shadow: 0 0 15px rgba(229, 199, 107, 0.4);
}

.forgot-password-title {
    color: var(--gold);
    text-align: center;
    font-size: 1.8rem;
    margin-bottom: 20px;
    font-weight: 500;
}

.forgot-password-subtitle {
    color: var(--white-dim);
    text-align: center;
    margin-bottom: 25px;
    font-size: 1rem;
    line-height: 1.5;
}

.form-group {
    position: relative;
    margin-bottom: 25px;
}

.form-icon {
    position: absolute;
    left: 15px;
    top: 50%;
    transform: translateY(-50%);
    color: var(--gold);
    font-size: 1.2rem;
}

.form-control {
    background: rgba(0, 0, 0, 0.3);
    border: 1px solid var(--gold-border);
    border-radius: 30px;
    color: var(--white);
    padding: 12px 15px 12px 45px;
    width: 100%;
    transition: all 0.3s ease;
}

.form-control:focus {
    outline: none;
    border-color: var(--gold);
    box-shadow: 0 0 0 2px rgba(229, 199, 107, 0.3);
}

.form-control::placeholder {
    color: rgba(255, 255, 255, 0.5);
}

.btn-reset {
    border-radius: 30px;
    padding: 12px 20px;
    width: 100%;
    font-weight: 500;
    font-size: 1rem;
    transition: all 0.3s ease;
}


.back-to-login {
    text-align: center;
    margin-top: 25px;
    padding-top: 20px;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
}

.back-to-login a {
    color: var(--gold);
    text-decoration: none;
    font-weight: 500;
    transition: all 0.3s ease;
}

.back-to-login a:hover {
    text-decoration: underline;
}

.alert {
    border-radius: var(--border-radius);
    padding: 12px 15px;
    margin-bottom: 20px;
    border: none;
}

.alert-danger {
    background-color: rgba(220, 53, 69, 0.2);
    color: #ff6b6b;
    border-left: 4px solid #dc3545;
}

.alert-success {
    background-color: rgba(40, 167, 69, 0.2);
    color: #51cf66;
    border-left: 4px solid #28a745;
}

/* Animaciones */
@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.forgot-password-card {
    animation: fadeIn 0.5s ease forwards;
}

/* Indicador de fortaleza de contraseña */
.password-strength {
    height: 5px;
    margin-top: 5px;
    border-radius: 5px;
    transition: all 0.3s ease;
}

.strength-weak {
    background-color: #dc3545;
    width: 30%;
}

.strength-medium {
    background-color: #ffc107;
    width: 60%;
}

.strength-strong {
    background-color: #28a745;
    width: 100%;
}

/* Responsive */
@media (max-width: 576px) {
    .forgot-password-card {
        padding: 30px 20px;
    }
    
    .forgot-password-title {
        font-size: 1.5rem;
    }
    
    .auth-logo img {
        height: 60px;
    }
    
    .forgot-password-subtitle {
        font-size: 0.9rem;
    }
}

.toggle-password {
    position: absolute;
    right: 15px;
    top: 50%;
    transform: translateY(-50%);
    color: var(--gold);
    cursor: pointer;
    font-size: 1.2rem;
    transition: all 0.3s ease;
}

.toggle-password:hover {
    color: var(--gold-dark);
}
</style>

<script>
    // Función para mostrar/ocultar contraseña
    function togglePassword(inputId, icon) {
        const input = document.getElementById(inputId);
        if (input.type === 'password') {
            input.type = 'text';
            icon.classList.remove('bi-eye-slash');
            icon.classList.add('bi-eye');
        } else {
            input.type = 'password';
            icon.classList.remove('bi-eye');
            icon.classList.add('bi-eye-slash');
        }
    }
</script>

{{#section 'scripts'}}
<script>
    const resetPasswordForm = document.getElementById('resetPasswordForm');
    const newPasswordInput = document.getElementById('newPassword');
    const confirmPasswordInput = document.getElementById('confirmPassword');

    // Función para verificar la fortaleza de la contraseña
    function checkPasswordStrength(password) {
        // Crear un indicador de fortaleza si no existe
        let strengthIndicator = document.querySelector('.password-strength');
        if (!strengthIndicator) {
            strengthIndicator = document.createElement('div');
            strengthIndicator.className = 'password-strength';
            newPasswordInput.parentNode.appendChild(strengthIndicator);
        }
        
        // Evaluar fortaleza
        const hasLowerCase = /[a-z]/.test(password);
        const hasUpperCase = /[A-Z]/.test(password);
        const hasNumber = /\d/.test(password);
        const hasSpecialChar = /[!@#$%^&*(),.?":{}|<>]/.test(password);
        const isLongEnough = password.length >= 8;
        
        const strength = [hasLowerCase, hasUpperCase, hasNumber, hasSpecialChar, isLongEnough].filter(Boolean).length;
        
        // Actualizar indicador
        strengthIndicator.className = 'password-strength';
        if (strength < 3) {
            strengthIndicator.classList.add('strength-weak');
        } else if (strength < 5) {
            strengthIndicator.classList.add('strength-medium');
        } else {
            strengthIndicator.classList.add('strength-strong');
        }
    }

    // Evento para verificar fortaleza mientras se escribe
    if (newPasswordInput) {
        newPasswordInput.addEventListener('input', function() {
            checkPasswordStrength(this.value);
        });
    }

    // Validación al enviar el formulario
    if (resetPasswordForm) {
        resetPasswordForm.addEventListener('submit', function(e) {
            const newPassword = newPasswordInput.value;
            const confirmPassword = confirmPasswordInput.value;
            
            if (newPassword !== confirmPassword) {
                e.preventDefault();
                alert('Las contraseñas no coinciden');
                return false;
            }
            
            console.log('Enviando nueva contraseña...');
        });
    }
</script>
{{/section}}

