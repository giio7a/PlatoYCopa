<!-- Header -->
<header class="header">
<div class="header-content">
    <h1 class="gradient-text">Reseñas de Nuestros Clientes</h1>
    <p class="header-subtitle">Descubre lo que nuestros clientes dicen sobre nuestro servicio</p>
</div>
</header>

<!-- Contenido Principal -->
<main class="main-container">
<!-- Resumen de Reseñas -->
<section class="reviews-summary">
    <div class="row align-items-center">
        <div class="col-md-4 text-center mb-4 mb-md-0">
            <div class="rating-overview">
                <div class="rating-value gradient-text">{{ratingAverage}}</div>
                <div class="rating-stars">
                    {{#times fullStars}}
                    <i class="bi bi-star-fill"></i>
                    {{/times}}
                    {{#if halfStar}}
                    <i class="bi bi-star-half"></i>
                    {{/if}}
                    {{#times emptyStars}}
                    <i class="bi bi-star"></i>
                    {{/times}}
                </div>
                <div class="rating-count">Basado en {{totalReviews}} reseñas</div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="rating-bars">
                {{#each ratingDistribution}}
                <div class="rating-bar">
                    <span class="bar-label">{{stars}}</span>
                    <div class="bar-container">
                        <div class="bar" style="width: {{percentage}}%;"></div>
                    </div>
                    <span class="bar-percentage">{{percentage}}%</span>
                </div>
                {{/each}}
            </div>
        </div>
    </div>
</section>

<!-- Filtros y Ordenamiento -->
<section class="filter-container">
   <div class="filter-scroll-wrapper">
       <button class="filter-btn" data-filter="all">
           <span class="filter-icon"><i class="bi bi-grid-3x3-gap"></i></span>
           <span class="filter-text">Todas</span>
       </button>
       {{#each popularEventTypes}}
       <button class="filter-btn" data-filter="{{id}}">
           <span class="filter-icon"><i class="bi {{#if icono}}{{icono}}{{else}}bi-calendar-event{{/if}}"></i></span>
           <span class="filter-text">{{nombre}} <span class="review-count">({{count}})</span></span>
       </button>
       {{/each}}
   </div>
   <div class="filter-gradient-overlay"></div>
   
   <div class="sort-container">
       <select class="sort-select" id="sortReviews">
           <option value="recent">Más recientes</option>
           <option value="highest">Mayor calificación</option>
           <option value="lowest">Menor calificación</option>
       </select>
   </div>
</section>

<!-- Estado vacío para cuando no hay reseñas -->
<div class="empty-state" id="emptyReviewsState" style="display: none;">
    <div class="empty-state-content">
        <i class="bi bi-chat-square-text"></i>
        <h4>No se encontraron reseñas</h4>
        <p>No hay reseñas disponibles para la categoría seleccionada.</p>
        <button class="btn btn-gold reset-filter-btn">Ver todas las reseñas</button>
    </div>
</div>

<!-- Lista de Reseñas -->
<section class="reviews-grid py-5">
    {{#each reviews}}
    <div class="review-card interactive-card" data-category="{{tipo_evento_id}}" data-rating="{{calificacion}}" data-date="{{fecha_timestamp}}" data-review-id="{{id}}">
        <div class="review-header">
            <div class="reviewer-info">
                <div class="reviewer-avatar">
                    <i class="bi bi-person-circle"></i>
                </div>
                <div class="reviewer-details">
                    <h5 class="reviewer-name">{{nombre_cliente}}</h5>
                    <span class="review-date">{{fecha}}</span>
                    <div class="verified-badge">
                        {{#if verificado}}
                        <i class="bi bi-patch-check-fill"></i> Verificado
                        {{/if}}
                    </div>
                </div>
            </div>
            <div class="review-rating">
                {{#times calificacion}}
                <i class="bi bi-star-fill"></i>
                {{/times}}
                {{#times (subtract 5 calificacion)}}
                <i class="bi bi-star"></i>
                {{/times}}
            </div>
        </div>
        <div class="review-content">
            <p class="review-text">
                {{comentario}}
            </p>
            <div class="review-footer">
                <span class="event-type">
                    <i class="bi {{eventIcon}}"></i> {{tipo_evento}}
                </span>
                {{#if imagenes}}
                <div class="review-images">
                    {{#each imagenes}}
                    <img src="{{this}}" alt="Foto del evento" class="review-image">
                    {{/each}}
                </div>
                {{/if}}
            </div>
        </div>
        <div class="review-actions">
            <button class="action-btn view-details-btn" title="Ver detalles">
                <i class="bi bi-eye"></i>
            </button>
            <button class="action-btn share-btn" data-review-id="{{id}}" title="Compartir">
                <i class="bi bi-share"></i>
            </button>
        </div>
    </div>
    {{/each}}
</section>

<!-- Paginación -->
<div class="pagination-container">
    <ul class="pagination">
        <li class="page-item {{#unless hasPrevPage}}disabled{{/unless}}">
            <a class="page-link" href="?page={{prevPage}}{{#if currentCategory}}&tipo={{currentCategory}}{{/if}}" aria-label="Anterior">
                <i class="bi bi-chevron-left"></i>
            </a>
        </li>
        {{#each pages}}
        <li class="page-item {{#if active}}active{{/if}}">
            <a class="page-link" href="?page={{number}}{{#if ../currentCategory}}&tipo={{../currentCategory}}{{/if}}">{{number}}</a>
        </li>
        {{/each}}
        <li class="page-item {{#unless hasNextPage}}disabled{{/unless}}">
            <a class="page-link" href="?page={{nextPage}}{{#if currentCategory}}&tipo={{currentCategory}}{{/if}}" aria-label="Siguiente">
                <i class="bi bi-chevron-right"></i>
            </a>
        </li>
    </ul>
</div>
</main>

<!-- Botón flotante para agregar reseña -->
<button class="add-review-btn" data-bs-toggle="modal" data-bs-target="#addReviewModal">
<i class="bi bi-plus-circle"></i> Agregar Reseña
</button>

<!-- Modal para Agregar Reseña -->
<div class="modal fade" id="addReviewModal" tabindex="-1" aria-labelledby="addReviewModalLabel" aria-hidden="true">
<div class="modal-dialog modal-dialog-centered">
  <div class="modal-content">
      <div class="modal-header">
          <h5 class="modal-title" id="addReviewModalLabel">
              <i class="bi bi-pencil-square"></i> Agregar Reseña
          </h5>
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
          <form id="reviewForm" action="/submit-review" method="POST" novalidate>
              <div class="form-group">
                  <label for="orderNumber" class="form-label">
                      <i class="bi bi-hash"></i> Número de Contrato *
                  </label>
                  <input type="text" class="form-control" id="orderNumber" name="orderNumber" required data-validate="contractNumber">
                  <small class="form-text">Ingrese el número de contrato para verificar que es un cliente real. Solo clientes con contratos pueden dejar reseñas.</small>
              </div>
              
              <div class="form-group">
                  <label for="reviewerName" class="form-label">
                      <i class="bi bi-person"></i> Nombre *
                  </label>
                  <input type="text" class="form-control" id="reviewerName" name="reviewerName" required data-validate="name">
              </div>
              
              <div class="form-group">
                  <label for="eventType" class="form-label">
                      <i class="bi bi-calendar-event"></i> Tipo de Evento *
                  </label>
                  <select class="form-select" id="eventType" name="eventType" required>
                      <option value="" selected disabled>Selecciona el tipo de evento</option>
                      {{#each tiposEventos}}
                      <option value="{{id}}">{{nombre}}</option>
                      {{/each}}
                  </select>
              </div>
              
              <div class="form-group">
                  <label class="form-label">
                      <i class="bi bi-star"></i> Calificación *
                  </label>
                  <div class="rating-container">
                      <div class="star-rating">
                          <input type="radio" id="star5" name="calificacion" value="5" required>
                          <label for="star5" title="5 estrellas">★</label>
                          <input type="radio" id="star4" name="calificacion" value="4">
                          <label for="star4" title="4 estrellas">★</label>
                          <input type="radio" id="star3" name="calificacion" value="3">
                          <label for="star3" title="3 estrellas">★</label>
                          <input type="radio" id="star2" name="calificacion" value="2">
                          <label for="star2" title="2 estrellas">★</label>
                          <input type="radio" id="star1" name="calificacion" value="1">
                          <label for="star1" title="1 estrella">★</label>
                      </div>
                  </div>
              </div>
              
              <div class="form-group">
                  <label for="reviewText" class="form-label">
                      <i class="bi bi-chat-quote"></i> Tu Reseña *
                  </label>
                  <textarea class="form-control" id="reviewText" name="comentario" rows="3" required data-validate="message"></textarea>
              </div>
              
              <div class="form-group file-upload">
                  <label for="reviewImages" class="form-label">
                      <i class="bi bi-image"></i> Subir Fotos (opcional)
                   </label>
                   <div class="file-upload-wrapper">
                       <i class="bi bi-upload"></i>
                       <span class="file-upload-text">Seleccionar imágenes</span>
                       <input type="file" class="form-control" id="reviewImages" name="imagenes" multiple accept="image/*">
                   </div>
                   <div id="imagePreviewContainer" class="image-preview-container"></div>
                   <small class="form-text mt-2">Puedes subir hasta 5 imágenes (máx. 5MB cada una)</small>
               </div>
           </form>
       </div>
       <div class="modal-footer">
           <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancelar</button>
           <button type="submit" form="reviewForm" class="btn btn-submit-review">
               <i class="bi bi-send"></i> Enviar Reseña
           </button>
       </div>
   </div>
</div>
</div>

<!-- Modal para ver detalles de reseña -->
<div class="modal fade" id="reviewDetailModal" tabindex="-1" aria-labelledby="reviewDetailModalLabel" aria-hidden="true">
 <div class="modal-dialog modal-lg">
   <div class="modal-content">
     <div class="modal-header">
       <h5 class="modal-title" id="reviewDetailModalLabel">Detalle de Reseña</h5>
       <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
     </div>
     <div class="modal-body">
       <div class="review-detail-content">
         <div class="review-detail-header">
           <div class="reviewer-info">
             <div class="reviewer-avatar-large">
               <i class="bi bi-person-circle"></i>
             </div>
             <div class="reviewer-details">
               <h4 id="reviewDetailName"></h4>
               <div class="review-detail-meta">
                 <span id="reviewDetailDate"></span>
                 <span class="review-detail-event" id="reviewDetailEvent"></span>
               </div>
             </div>
           </div>
           <div class="review-detail-rating" id="reviewDetailRating"></div>
         </div>
         
         <div class="review-detail-body">
           <p id="reviewDetailText"></p>
         </div>
         
         <div class="review-detail-images" id="reviewDetailImages">
           <!-- Las imágenes se agregarán dinámicamente -->
         </div>
       </div>
     </div>
     <div class="modal-footer">
       <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cerrar</button>
       <a href="#" class="btn btn-gold" id="reviewDetailShare">
         <i class="bi bi-share"></i> Compartir
       </a>
     </div>
   </div>
 </div>
</div>

<!-- Toast para notificaciones -->
<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
   <div id="shareToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
       <div class="toast-header">
           <i class="bi bi-check-circle-fill me-2 text-success"></i>
           <strong class="me-auto">Enlace copiado</strong>
           <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
       </div>
       <div class="toast-body">
           El enlace ha sido copiado al portapapeles.
       </div>
   </div>
</div>

{{#if success}}
<div class="alert alert-success alert-dismissible fade show position-fixed bottom-0 end-0 m-3" role="alert">
  ¡Reseña enviada con éxito! Será publicada después de ser revisada.
  <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
</div>
{{/if}}

{{#if error}}
<div class="alert alert-danger alert-dismissible fade show position-fixed bottom-0 end-0 m-3" role="alert">
  Hubo un error al enviar tu reseña. Por favor, intenta nuevamente.
  <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
</div>
{{/if}}

<script>
document.addEventListener('DOMContentLoaded', function() {
   // Inicializar toast
   const shareToast = new bootstrap.Toast(document.getElementById('shareToast'));
   
   // Verificar si hay un ID de tipo de evento o reseña en la URL
   const urlParams = new URLSearchParams(window.location.search);
   const eventTypeId = urlParams.get('tipo');
   const reviewId = urlParams.get('id');
   
   // Establecer el filtro activo basado en la URL
   if (eventTypeId) {
       const filterButtons = document.querySelectorAll('.filter-btn');
       filterButtons.forEach(button => {
           button.classList.remove('active');
           if (button.getAttribute('data-filter') === eventTypeId) {
               button.classList.add('active');
           }
       });
       
       // Filtrar las reseñas
       filterReviews(eventTypeId);
   } else {
       // Si no hay filtro, activar "Todas"
       document.querySelector('.filter-btn[data-filter="all"]').classList.add('active');
   }
   
   // Si hay un ID de reseña específico, resaltar esa reseña
   if (reviewId) {
       const reviewCards = document.querySelectorAll('.review-card');
       let targetReview = null;
       
       reviewCards.forEach(card => {
           if (card.getAttribute('data-review-id') === reviewId) {
               targetReview = card;
               card.classList.add('highlighted-review');
           }
       });
       
       // Desplazarse a la reseña seleccionada
       if (targetReview) {
           setTimeout(() => {
               targetReview.scrollIntoView({ behavior: 'smooth', block: 'center' });
               
               // Opcional: Abrir automáticamente el modal con los detalles
               setTimeout(() => {
                   openReviewDetail(targetReview);
               }, 800);
           }, 500);
       }
   }
    
   // Animación para las barras de calificación
   setTimeout(() => {
       document.querySelectorAll('.bar').forEach(bar => {
           const width = bar.style.width;
           bar.style.width = '0';
           setTimeout(() => {
               bar.style.width = width;
           }, 300);
       });
   }, 500);
    
   // Función para filtrar reseñas
   function filterReviews(category) {
       const reviewCards = document.querySelectorAll('.review-card');
       const emptyState = document.getElementById('emptyReviewsState');
       let visibleCount = 0;
       
       reviewCards.forEach(card => {
           if (category === 'all' || card.getAttribute('data-category') === category) {
               card.style.display = 'block';
               setTimeout(() => {
                   card.style.opacity = '1';
                   card.style.transform = 'translateY(0)';
               }, 50);
               visibleCount++;
           } else {
               card.style.opacity = '0';
               card.style.transform = 'translateY(20px)';
               setTimeout(() => {
                   card.style.display = 'none';
               }, 300);
           }
       });
       
       // Mostrar mensaje de estado vacío si no hay elementos
       if (visibleCount === 0) {
           emptyState.style.display = 'flex';
       } else {
           emptyState.style.display = 'none';
       }
       
       // Actualizar URL para compartir
       const shareUrl = new URL(window.location.href);
       if (category !== 'all') {
           shareUrl.searchParams.set('tipo', category);
       } else {
           shareUrl.searchParams.delete('tipo');
       }
       window.history.replaceState({}, '', shareUrl);
   }
    
   // Funcionalidad para los filtros
   const filterButtons = document.querySelectorAll('.filter-btn');
   
   filterButtons.forEach(button => {
       button.addEventListener('click', function() {
           // Remover clase active de todos los botones
           filterButtons.forEach(btn => btn.classList.remove('active'));
           // Agregar clase active al botón clickeado
           this.classList.add('active');
           
           // Obtener el filtro seleccionado
           const filter = this.getAttribute('data-filter');
           
           // Filtrar las reseñas
           filterReviews(filter);
       });
   });

   // Botón para resetear filtros
   const resetFilterBtn = document.querySelector('.reset-filter-btn');
   if (resetFilterBtn) {
       resetFilterBtn.addEventListener('click', function() {
           const allCategoryBtn = document.querySelector('.filter-btn[data-filter="all"]');
           allCategoryBtn.click();
       });
   }

   // Funcionalidad para ordenar
   const sortSelect = document.getElementById('sortReviews');
   sortSelect.addEventListener('change', function() {
       const sortValue = this.value;
       const reviewsContainer = document.querySelector('.reviews-grid');
       const reviewCards = document.querySelectorAll('.review-card');
       const reviewsArray = Array.from(reviewCards);
       
       // Ordenar las reseñas según la opción seleccionada
       reviewsArray.sort((a, b) => {
           if (sortValue === 'recent') {
               return b.getAttribute('data-date') - a.getAttribute('data-date');
           } else if (sortValue === 'highest') {
               return b.getAttribute('data-rating') - a.getAttribute('data-rating');
           } else if (sortValue === 'lowest') {
               return a.getAttribute('data-rating') - b.getAttribute('data-rating');
           }
       });
       
       // Reordenar las reseñas en el DOM
       reviewsArray.forEach(review => {
           reviewsContainer.appendChild(review);
       });
   });
   
   // Abrir modal de detalle al hacer clic en una reseña o en el botón de detalles
   const reviewCards = document.querySelectorAll('.review-card');
   reviewCards.forEach(card => {
       card.addEventListener('click', function(e) {
           // No abrir el modal si se hizo clic en el botón de compartir
           if (e.target.closest('.share-btn')) {
               return;
           }
           openReviewDetail(this);
       });
       
       // Botón de ver detalles
       const viewDetailsBtn = card.querySelector('.view-details-btn');
       if (viewDetailsBtn) {
           viewDetailsBtn.addEventListener('click', function(e) {
               e.stopPropagation(); // Evitar que se propague al card
               openReviewDetail(card);
           });
       }
       
       // Botón de compartir
       const shareBtn = card.querySelector('.share-btn');
       if (shareBtn) {
           shareBtn.addEventListener('click', function(e) {
               e.stopPropagation(); // Evitar que se propague al card
               const reviewId = this.getAttribute('data-review-id');
               shareReview(reviewId);
           });
       }
   });
   
   // Función para abrir el modal de detalle de reseña
   function openReviewDetail(reviewCard) {
       const modal = document.getElementById('reviewDetailModal');
       const modalName = document.getElementById('reviewDetailName');
       const modalDate = document.getElementById('reviewDetailDate');
       const modalEvent = document.getElementById('reviewDetailEvent');
       const modalRating = document.getElementById('reviewDetailRating');
       const modalText = document.getElementById('reviewDetailText');
       const modalImages = document.getElementById('reviewDetailImages');
       const modalShare = document.getElementById('reviewDetailShare');
       
       // Obtener datos de la reseña
       const name = reviewCard.querySelector('.reviewer-name').textContent;
       const date = reviewCard.querySelector('.review-date').textContent;
       const event = reviewCard.querySelector('.event-type').textContent;
       const rating = reviewCard.getAttribute('data-rating');
       const text = reviewCard.querySelector('.review-text').textContent;
       const reviewId = reviewCard.getAttribute('data-review-id');
       
       // Actualizar el modal
       modalName.textContent = name;
       modalDate.textContent = date;
       modalEvent.textContent = event;
       modalText.textContent = text;
       
       // Actualizar estrellas
       modalRating.innerHTML = '';
       for (let i = 0; i < 5; i++) {
           const star = document.createElement('i');
           star.className = i < rating ? 'bi bi-star-fill' : 'bi bi-star';
           modalRating.appendChild(star);
       }
       
       // Actualizar imágenes
       modalImages.innerHTML = '';
       const reviewImages = reviewCard.querySelectorAll('.review-image');
       if (reviewImages.length > 0) {
           const imageGallery = document.createElement('div');
           imageGallery.className = 'image-gallery';
           
           reviewImages.forEach((img, index) => {
               const imgContainer = document.createElement('div');
               imgContainer.className = 'gallery-image-container';
               
               const imgClone = document.createElement('img');
               imgClone.src = img.src;
               imgClone.alt = 'Foto del evento';
               imgClone.className = 'gallery-image';
               imgClone.setAttribute('data-index', index);
               
               imgClone.addEventListener('click', function() {
                   openImageViewer(this.src, index, Array.from(reviewImages).map(img => img.src));
               });
               
               imgContainer.appendChild(imgClone);
               imageGallery.appendChild(imgContainer);
           });
           
           modalImages.appendChild(imageGallery);
           modalImages.style.display = 'block';
       } else {
           modalImages.style.display = 'none';
       }
       
       // Actualizar enlace para compartir
       const shareUrl = new URL(window.location.href);
       shareUrl.searchParams.set('id', reviewId);
       modalShare.setAttribute('data-url', shareUrl.toString());
       
       // Abrir el modal
       const bsModal = new bootstrap.Modal(modal);
       bsModal.show();
   }
   
   // Función para abrir el visor de imágenes
   function openImageViewer(src, index, images) {
       // Crear el visor de imágenes
       const viewer = document.createElement('div');
       viewer.className = 'image-viewer';
       
       // Crear el contenedor de la imagen
       const imageContainer = document.createElement('div');
       imageContainer.className = 'viewer-image-container';
       
       // Crear la imagen
       const img = document.createElement('img');
       img.src = src;
       img.className = 'viewer-image';
       
       // Crear los botones de navegación
       const prevBtn = document.createElement('button');
       prevBtn.className = 'viewer-nav-btn prev-btn';
       prevBtn.innerHTML = '<i class="bi bi-chevron-left"></i>';
       
       const nextBtn = document.createElement('button');
       nextBtn.className = 'viewer-nav-btn next-btn';
       nextBtn.innerHTML = '<i class="bi bi-chevron-right"></i>';
       
       // Crear el botón de cerrar
       const closeBtn = document.createElement('button');
       closeBtn.className = 'viewer-close-btn';
       closeBtn.innerHTML = '<i class="bi bi-x-lg"></i>';
       
       // Crear el contador de imágenes
       const counter = document.createElement('div');
       counter.className = 'viewer-counter';
       counter.textContent = `${index + 1} / ${images.length}`;
       
       // Agregar elementos al visor
       imageContainer.appendChild(img);
       viewer.appendChild(imageContainer);
       viewer.appendChild(prevBtn);
       viewer.appendChild(nextBtn);
       viewer.appendChild(closeBtn);
       viewer.appendChild(counter);
       
       // Agregar el visor al body
       document.body.appendChild(viewer);
       document.body.style.overflow = 'hidden'; // Evitar scroll
       
       // Funcionalidad de navegación
       let currentIndex = index;
       
       function updateImage() {
           img.src = images[currentIndex];
           counter.textContent = `${currentIndex + 1} / ${images.length}`;
       }
       
       prevBtn.addEventListener('click', function() {
           currentIndex = (currentIndex - 1 + images.length) % images.length;
           updateImage();
       });
       
       nextBtn.addEventListener('click', function() {
           currentIndex = (currentIndex + 1) % images.length;
           updateImage();
       });
       
       // Navegación con teclado
       document.addEventListener('keydown', function(e) {
           if (e.key === 'ArrowLeft') {
               prevBtn.click();
           } else if (e.key === 'ArrowRight') {
               nextBtn.click();
           } else if (e.key === 'Escape') {
               closeBtn.click();
           }
       });
       
       // Cerrar el visor
       closeBtn.addEventListener('click', function() {
           viewer.remove();
           document.body.style.overflow = ''; // Restaurar scroll
       });
       
       // Cerrar al hacer clic fuera de la imagen
       viewer.addEventListener('click', function(e) {
           if (e.target === viewer) {
               closeBtn.click();
           }
       });
   }
   
   // Función para compartir reseña
   function shareReview(reviewId) {
       const shareUrl = new URL(window.location.href);
       shareUrl.searchParams.set('id', reviewId);
       
       if (navigator.share) {
           navigator.share({
               title: 'Reseña de Plato y Copa',
               text: 'Mira esta reseña de Plato y Copa',
               url: shareUrl.toString()
           })
           .catch(console.error);
       } else {
           // Fallback para navegadores que no soportan Web Share API
           navigator.clipboard.writeText(shareUrl.toString())
               .then(() => {
                   shareToast.show();
               })
               .catch(err => {
                   console.error('Error al copiar: ', err);
               });
       }
   }
   
   // Compartir reseña desde el modal
   document.getElementById('reviewDetailShare').addEventListener('click', function(e) {
       e.preventDefault();
       const url = this.getAttribute('data-url');
       
       if (navigator.share) {
           navigator.share({
               title: 'Reseña de Plato y Copa',
               text: 'Mira esta reseña de Plato y Copa',
               url: url
           })
           .catch(console.error);
       } else {
           // Fallback para navegadores que no soportan Web Share API
           navigator.clipboard.writeText(url)
               .then(() => {
                   shareToast.show();
               })
               .catch(err => {
                   console.error('Error al copiar: ', err);
               });
       }
   });
    
   // Validación adicional para el formulario de reseñas
   const ratingInputs = document.querySelectorAll('input[name="calificacion"]');
   const reviewForm = document.getElementById('reviewForm');
   
   reviewForm.addEventListener('submit', function(e) {
       // Verificar si se ha seleccionado una calificación
       let ratingSelected = false;
       ratingInputs.forEach(input => {
           if (input.checked) {
               ratingSelected = true;
           }
       });
       
       if (!ratingSelected) {
           e.preventDefault();
           alert('Por favor, selecciona una calificación');
       }
   });
   
   // Previsualización de imágenes
   const imageInput = document.getElementById('reviewImages');
   const previewContainer = document.getElementById('imagePreviewContainer');
   
   if (imageInput) {
       imageInput.addEventListener('change', function() {
           previewContainer.innerHTML = '';
           
           if (this.files) {
               const fileCount = Math.min(this.files.length, 5); // Limitar a 5 imágenes
               
               for (let i = 0; i < fileCount; i++) {
                   const file = this.files[i];
                   if (file.type.startsWith('image/')) {
                       const reader = new FileReader();
                       
                       reader.onload = function(e) {
                           const previewWrapper = document.createElement('div');
                           previewWrapper.className = 'image-preview-item';
                           
                           const img = document.createElement('img');
                           img.src = e.target.result;
                           img.className = 'preview-image';
                           
                           const removeBtn = document.createElement('button');
                           removeBtn.className = 'remove-image-btn';
                           removeBtn.innerHTML = '<i class="bi bi-x-circle"></i>';
                           removeBtn.addEventListener('click', function(e) {
                               e.preventDefault();
                               previewWrapper.remove();
                           });
                           
                           previewWrapper.appendChild(img);
                           previewWrapper.appendChild(removeBtn);
                           previewContainer.appendChild(previewWrapper);
                       };
                       
                       reader.readAsDataURL(file);
                   }
               }
           }
       });
   }
   
   // Detectar scroll horizontal en filtros
   const filterContainer = document.querySelector('.filter-scroll-wrapper');
   if (filterContainer) {
       filterContainer.addEventListener('scroll', function() {
           const isScrollEnd = this.scrollLeft + this.offsetWidth >= this.scrollWidth - 20;
           const gradientOverlay = document.querySelector('.filter-gradient-overlay');
           
           if (isScrollEnd) {
               gradientOverlay.style.opacity = '0';
           } else {
               gradientOverlay.style.opacity = '1';
           }
       });
   }
   
   // Animación para las tarjetas de reseñas
   const reviewItems = document.querySelectorAll('.review-card');
   const observer = new IntersectionObserver((entries) => {
       entries.forEach(entry => {
           if (entry.isIntersecting) {
               entry.target.classList.add('animate-fadeIn');
               observer.unobserve(entry.target);
           }
       });
   }, { threshold: 0.1 });

   reviewItems.forEach((item, index) => {
       item.style.animationDelay = `${index * 0.1}s`;
       observer.observe(item);
   });
});
</script>

<style>
/* Estilos para la sección de reseñas */
.filter-container {
   position: relative;
   margin: 2rem 0;
   padding-bottom: 5px;
   display: flex;
   justify-content: space-between;
   align-items: center;
   flex-wrap: wrap;
   gap: 15px;
}

.filter-scroll-wrapper {
   display: flex;
   gap: 10px;
   overflow-x: auto;
   padding: 10px 5px;
   -webkit-overflow-scrolling: touch;
   scrollbar-width: none; /* Firefox */
   -ms-overflow-style: none; /* IE/Edge */
   flex: 1;
   max-width: calc(100% - 150px);
}

.filter-scroll-wrapper::-webkit-scrollbar {
   display: none; /* Chrome/Safari/Opera */
}

.filter-gradient-overlay {
   position: absolute;
   top: 0;
   right: 150px;
   width: 60px;
   height: 100%;
   background: linear-gradient(to right, transparent, var(--black));
   pointer-events: none;
   opacity: 1;
   transition: opacity 0.3s ease;
}

.filter-btn {
   background: linear-gradient(145deg, rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.4));
   border: 1px solid var(--gold-border);
   color: var(--white);
   padding: 10px 16px;
   border-radius: 50px;
   font-size: 0.9rem;
   transition: all 0.3s ease;
   cursor: pointer;
   display: flex;
   align-items: center;
   gap: 8px;
   white-space: nowrap;
   min-height: 44px;
   box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

.filter-icon {
   display: flex;
   align-items: center;
   justify-content: center;
   color: var(--gold);
}

.filter-btn.active,
.filter-btn:hover {
   background: linear-gradient(to right, var(--gold), var(--gold-dark));
   color: var(--black);
   border-color: var(--gold);
   transform: translateY(-2px);
   box-shadow: 0 4px 10px rgba(229, 199, 107, 0.3);
}

.filter-btn.active .filter-icon,
.filter-btn:hover .filter-icon {
   color: var(--black);
}

.review-count {
   font-size: 0.8rem;
   opacity: 0.8;
}

.sort-container {
   flex-shrink: 0;
   width: 140px;
}

.sort-select {
   width: 100%;
   padding: 10px 15px;
   border-radius: 50px;
   background: linear-gradient(145deg, rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.4));
   border: 1px solid var(--gold-border);
   color: var(--white);
   font-size: 0.9rem;
   appearance: none;
   background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='%23E5C76B' viewBox='0 0 16 16'%3E%3Cpath d='M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z'/%3E%3C/svg%3E");
   background-repeat: no-repeat;
   background-position: right 15px center;
   padding-right: 35px;
   cursor: pointer;
   transition: all 0.3s ease;
}

.sort-select:focus {
   outline: none;
   border-color: var(--gold);
   box-shadow: 0 0 0 2px rgba(229, 199, 107, 0.3);
}

/* Estilos para las tarjetas de reseñas */
.reviews-grid {
   display: grid;
   grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
   gap: 25px;
}

.review-card {
   background: linear-gradient(145deg, rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.4));
   border: 1px solid var(--gold-border);
   border-radius: var(--border-radius);
   padding: 20px;
   transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
   box-shadow: var(--shadow-dark);
   position: relative;
   overflow: hidden;
}

.review-card:hover {
   transform: translateY(-10px);
   box-shadow: var(--shadow-gold), 0 15px 35px rgba(0, 0, 0, 0.3);
   border-color: var(--gold-border-hover);
}

.review-card::before {
   content: "";
   position: absolute;
   top: 0;
   left: 0;
   width: 100%;
   height: 5px;
   background: linear-gradient(to right, var(--gold), var(--gold-dark));
   opacity: 0;
   transition: opacity 0.4s ease;
}

.review-card:hover::before {
   opacity: 1;
}

.review-header {
   display: flex;
   justify-content: space-between;
   align-items: flex-start;
   margin-bottom: 15px;
   padding-bottom: 15px;
   border-bottom: 1px solid rgba(229, 199, 107, 0.2);
}

.reviewer-info {
   display: flex;
   align-items: center;
}

.reviewer-avatar {
   width: 50px;
   height: 50px;
   border-radius: 50%;
   background: linear-gradient(145deg, rgba(229, 199, 107, 0.2), rgba(229, 199, 107, 0.1));
   display: flex;
   align-items: center;
   justify-content: center;
   font-size: 1.8rem;
   color: var(--gold);
   margin-right: 15px;
   flex-shrink: 0;
}

.reviewer-details {
   display: flex;
   flex-direction: column;
}

.reviewer-name {
   font-size: 1.1rem;
   font-weight: 500;
   color: var(--white);
   margin-bottom: 5px;
}

.review-date {
   font-size: 0.85rem;
   color: var(--white-dim);
}

.verified-badge {
   display: flex;
   align-items: center;
   gap: 5px;
   font-size: 0.8rem;
   color: var(--gold);
   margin-top: 5px;
}

.review-rating {
   color: var(--gold);
   font-size: 1.2rem;
}

.review-content {
   display: flex;
   flex-direction: column;
   height: 100%;
}

.review-text {
   color: var(--white-dim);
   font-size: 0.95rem;
   line-height: 1.6;
   margin-bottom: 15px;
   flex-grow: 1;
}

.review-footer {
   display: flex;
   flex-direction: column;
   gap: 10px;
   margin-top: auto;
}

.event-type {
   display: inline-flex;
   align-items: center;
   background: linear-gradient(145deg, rgba(229, 199, 107, 0.2), rgba(229, 199, 107, 0.1));
   color: var(--gold);
   font-size: 0.85rem;
   padding: 5px 12px;
   border-radius: 50px;
   border: 1px solid var(--gold-border);
   gap: 5px;
   align-self: flex-start;
}

.review-images {
   display: flex;
   gap: 10px;
   overflow-x: auto;
   padding: 5px 0;
   scrollbar-width: thin;
   scrollbar-color: var(--gold) rgba(0, 0, 0, 0.2);
}

.review-images::-webkit-scrollbar {
   height: 6px;
}

.review-images::-webkit-scrollbar-track {
   background: rgba(0, 0, 0, 0.2);
   border-radius: 10px;
}

.review-images::-webkit-scrollbar-thumb {
   background-color: var(--gold);
   border-radius: 10px;
}

.review-image {
   width: 80px;
   height: 80px;
   object-fit: cover;
   border-radius: 8px;
   border: 1px solid var(--gold-border);
   transition: all 0.3s ease;
   flex-shrink: 0;
}

.review-image:hover {
   transform: scale(1.05);
   border-color: var(--gold);
   box-shadow: 0 0 10px rgba(229, 199, 107, 0.4);
}

/* Botones de acción en las tarjetas */
.review-actions {
   position: absolute;
   top: 15px;
   right: 15px;
   display: flex;
   gap: 8px;
   opacity: 0;
   transform: translateY(-10px);
   transition: all 0.3s ease;
}

.review-card:hover .review-actions {
   opacity: 1;
   transform: translateY(0);
}

.action-btn {
   width: 36px;
   height: 36px;
   border-radius: 50%;
   background: rgba(0, 0, 0, 0.6);
   border: 1px solid var(--gold-border);
   color: var(--gold);
   display: flex;
   align-items: center;
   justify-content: center;
   cursor: pointer;
   transition: all 0.3s ease;
}

.action-btn:hover {
   background: var(--gold);
   color: var(--black);
   transform: scale(1.1);
}

/* Estilos para el resumen de reseñas */
.reviews-summary {
   background: linear-gradient(145deg, rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.4));
   border: 1px solid var(--gold-border);
   border-radius: var(--border-radius);
   padding: 30px;
   margin-top: 2rem;
}

.rating-overview {
   display: flex;
   flex-direction: column;
   align-items: center;
}

.rating-value {
   font-size: 3.5rem;
   font-weight: 700;
   line-height: 1;
   margin-bottom: 10px;
}

.rating-stars {
   font-size: 1.5rem;
   color: var(--gold);
   margin-bottom: 10px;
}

.rating-count {
   font-size: 0.9rem;
   color: var(--white-dim);
}

.rating-bars {
   display: flex;
   flex-direction: column;
   gap: 10px;
}

.rating-bar {
   display: flex;
   align-items: center;
   gap: 10px;
}

.bar-label {
   width: 20px;
   text-align: right;
   font-size: 0.9rem;
   color: var(--white-dim);
}

.bar-container {
   flex-grow: 1;
   height: 10px;
   background-color: rgba(255, 255, 255, 0.1);
   border-radius: 5px;
   overflow: hidden;
}

.bar {
   height: 100%;
   background: linear-gradient(to right, var(--gold), var(--gold-dark));
   border-radius: 5px;
   transition: width 1s ease;
}

.bar-percentage {
   width: 40px;
   font-size: 0.9rem;
   color: var(--white-dim);
}

/* Estado vacío */
.empty-state {
   display: none;
   justify-content: center;
   align-items: center;
   min-height: 300px;
   margin: 2rem 0;
}

.empty-state-content {
   text-align: center;
   padding: 2rem;
   background: linear-gradient(145deg, rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.4));
   border: 1px solid var(--gold-border);
   border-radius: var(--border-radius);
   max-width: 500px;
}

.empty-state-content i {
   font-size: 3rem;
   color: var(--gold);
   margin-bottom: 1rem;
   opacity: 0.5;
}

.empty-state-content h4 {
   color: var(--gold);
   margin-bottom: 0.5rem;
}

.empty-state-content p {
   color: var(--white-dim);
   margin-bottom: 1.5rem;
}

/* Estilos para el botón flotante */
.add-review-btn {
   position: fixed;
   bottom: 30px;
   right: 30px;
   width: 60px;
   height: 60px;
   border-radius: 50%;
   background: linear-gradient(to right, var(--gold), var(--gold-dark));
   color: var(--black);
   border: none;
   display: flex;
   align-items: center;
   justify-content: center;
   font-size: 1.5rem;
   box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
   cursor: pointer;
   transition: all 0.3s ease;
   z-index: 10;
}

.add-review-btn:hover {
   transform: scale(1.1) rotate(5deg);
   box-shadow: 0 6px 20px rgba(229, 199, 107, 0.4);
}

/* Estilos para el modal de reseña */
.modal-content {
   background: linear-gradient(145deg, rgba(17, 17, 17, 0.95), rgba(0, 0, 0, 0.95));
   border: 1px solid var(--gold-border);
   border-radius: var(--border-radius);
   box-shadow: 0 15px 35px rgba(0, 0, 0, 0.5);
   overflow: hidden;
}

.modal-header {
   border-bottom: 1px solid var(--gold-border);
   padding: 1.2rem 1.5rem;
   background: linear-gradient(to right, rgba(229, 199, 107, 0.1), transparent);
}

.modal-title {
   color: var(--gold);
   font-size: 1.5rem;
   font-weight: 500;
}

.form-group {
   margin-bottom: 20px;
   position: relative;
}

.form-label {
   display: block;
   margin-bottom: 8px;
   color: var(--white);
   font-weight: 500;
}

.form-label i {
   color: var(--gold);
   margin-right: 5px;
}

.form-control, .form-select {
   background: rgba(0, 0, 0, 0.3);
   border: 1px solid var(--gold-border);
   border-radius: var(--border-radius);
   color: var(--white);
   padding: 12px 15px;
   width: 100%;
   transition: all 0.3s ease;
}

.form-control:focus, .form-select:focus {
   outline: none;
   border-color: var(--gold);
   box-shadow: 0 0 0 2px rgba(229, 199, 107, 0.3);
}

.form-text {
   font-size: 0.8rem;
   color: var(--white-dim);
   margin-top: 5px;
}

.file-upload-wrapper {
   position: relative;
   display: flex;
   align-items: center;
   padding: 12px 15px;
   background: rgba(0, 0, 0, 0.3);
   border: 1px solid var(--gold-border);
   border-radius: var(--border-radius);
   cursor: pointer;
   transition: all 0.3s ease;
}

.file-upload-wrapper:hover {
   border-color: var(--gold);
}

.file-upload-wrapper i {
   color: var(--gold);
   margin-right: 10px;
   font-size: 1.2rem;
}

.file-upload-text {
   color: var(--white-dim);
}

.file-upload input[type="file"] {
   position: absolute;
   top: 0;
   left: 0;
   width: 100%;
   height: 100%;
   opacity: 0;
   cursor: pointer;
}

.image-preview-container {
   display: flex;
   flex-wrap: wrap;
   gap: 10px;
   margin-top: 15px;
}

.image-preview-item {
   position: relative;
   width: 80px;
   height: 80px;
   border-radius: 8px;
   overflow: hidden;
   border: 1px solid var(--gold-border);
}

.preview-image {
   width: 100%;
   height: 100%;
   object-fit: cover;
}

.remove-image-btn {
   position: absolute;
   top: 5px;
   right: 5px;
   width: 20px;
   height: 20px;
   border-radius: 50%;
   background: rgba(0, 0, 0, 0.7);
   border: 1px solid var(--gold-border);
   color: var(--gold);
   display: flex;
   align-items: center;
   justify-content: center;
   font-size: 0.8rem;
   cursor: pointer;
   transition: all 0.3s ease;
}

.remove-image-btn:hover {
   background: var(--gold);
   color: var(--black);
}

.btn-submit-review {
   background: linear-gradient(to right, var(--gold), var(--gold-dark));
   color: var(--black);
   border: none;
   padding: 10px 20px;
   border-radius: 50px;
   font-weight: 500;
   display: flex;
   align-items: center;
   gap: 8px;
   transition: all 0.3s ease;
}

.btn-submit-review:hover {
   transform: translateY(-2px);
   box-shadow: 0 4px 10px rgba(229, 199, 107, 0.3);
}

/* Estilos para el modal de detalle */
.review-detail-header {
   display: flex;
   justify-content: space-between;
   align-items: flex-start;
   margin-bottom: 20px;
   padding-bottom: 15px;
   border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.reviewer-avatar-large {
   font-size: 3rem;
   color: var(--gold);
   margin-right: 15px;
}

.review-detail-meta {
   display: flex;
   gap: 15px;
   color: rgba(255, 255, 255, 0.7);
   font-size: 0.9rem;
}

.review-detail-event {
   background-color: rgba(229, 199, 107, 0.1);
   padding: 2px 10px;
   border-radius: 20px;
   display: inline-flex;
   align-items: center;
}

.review-detail-rating {
   color: var(--gold);
   font-size: 1.5rem;
}

.review-detail-body {
   font-size: 1.1rem;
   line-height: 1.6;
   margin-bottom: 20px;
   padding: 15px;
   background-color: rgba(255, 255, 255, 0.05);
   border-radius: 10px;
   font-style: italic;
}

.review-detail-images {
   margin-top: 20px;
}

.image-gallery {
   display: flex;
   flex-wrap: wrap;
   gap: 10px;
}

.gallery-image-container {
   width: 150px;
   height: 150px;
   border-radius: 8px;
   overflow: hidden;
   border: 1px solid var(--gold-border);
   cursor: pointer;
   transition: all 0.3s ease;
}

.gallery-image-container:hover {
   transform: scale(1.05);
   border-color: var(--gold);
   box-shadow: 0 0 15px rgba(229, 199, 107, 0.4);
}

.gallery-image {
   width: 100%;
   height: 100%;
   object-fit: cover;
}

/* Visor de imágenes */
.image-viewer {
   position: fixed;
   top: 0;
   left: 0;
   width: 100%;
   height: 100%;
   background-color: rgba(0, 0, 0, 0.9);
   display: flex;
   justify-content: center;
   align-items: center;
   z-index: 9999;
}

.viewer-image-container {
   position: relative;
   max-width: 90%;
   max-height: 90%;
}

.viewer-image {
   max-width: 100%;
   max-height: 90vh;
   object-fit: contain;
   border: 1px solid var(--gold-border);
   box-shadow: 0 0 30px rgba(0, 0, 0, 0.5);
}

.viewer-nav-btn {
   position: absolute;
   top: 50%;
   transform: translateY(-50%);
   width: 50px;
   height: 50px;
   border-radius: 50%;
   background: rgba(0, 0, 0, 0.5);
   border: 1px solid var(--gold-border);
   color: var(--gold);
   display: flex;
   align-items: center;
   justify-content: center;
   font-size: 1.5rem;
   cursor: pointer;
   transition: all 0.3s ease;
}

.viewer-nav-btn:hover {
   background: var(--gold);
   color: var(--black);
}

.prev-btn {
   left: 20px;
}

.next-btn {
   right: 20px;
}

.viewer-close-btn {
   position: absolute;
   top: 20px;
   right: 20px;
   width: 40px;
   height: 40px;
   border-radius: 50%;
   background: rgba(0, 0, 0, 0.5);
   border: 1px solid var(--gold-border);
   color: var(--gold);
   display: flex;
   align-items: center;
   justify-content: center;
   font-size: 1.2rem;
   cursor: pointer;
   transition: all 0.3s ease;
}

.viewer-close-btn:hover {
   background: var(--gold);
   color: var(--black);
}

.viewer-counter {
   position: absolute;
   bottom: 20px;
   left: 50%;
   transform: translateX(-50%);
   background: rgba(0, 0, 0, 0.5);
   border: 1px solid var(--gold-border);
   color: var(--white);
   padding: 5px 15px;
   border-radius: 20px;
   font-size: 0.9rem;
}

/* Estilo para la reseña destacada */
.highlighted-review {
   border: 2px solid var(--gold);
   box-shadow: 0 0 20px rgba(229, 199, 107, 0.6);
   transform: scale(1.03);
   position: relative;
   z-index: 2;
}

.highlighted-review::before {
   content: "Reseña seleccionada";
   position: absolute;
   top: -10px;
   left: 50%;
   transform: translateX(-50%);
   background-color: var(--gold);
   color: var(--black);
   padding: 2px 10px;
   border-radius: 20px;
   font-size: 0.8rem;
   font-weight: 600;
   z-index: 3;
}

/* Animaciones */
@keyframes fadeIn {
   from {
       opacity: 0;
       transform: translateY(30px);
   }
   to {
       opacity: 1;
       transform: translateY(0);
   }
}

.animate-fadeIn {
   animation: fadeIn 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
   opacity: 0;
}

/* Responsive */
@media (max-width: 991.98px) {
   .reviews-grid {
       grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
   }
   
   .filter-container {
       flex-direction: column;
       align-items: stretch;
   }
   
   .filter-scroll-wrapper {
       max-width: 100%;
   }
   
   .filter-gradient-overlay {
       right: 0;
   }
   
   .sort-container {
       width: 100%;
   }
   
   .review-detail-meta {
       flex-direction: column;
       gap: 5px;
   }
   
   .viewer-nav-btn {
       width: 40px;
       height: 40px;
       font-size: 1.2rem;
   }
   
   .prev-btn {
       left: 10px;
   }
   
   .next-btn {
       right: 10px;
   }
}

@media (max-width: 767.98px) {
   .reviews-grid {
       grid-template-columns: 1fr;
   }
   
   .reviews-summary {
       padding: 20px;
   }
   
   .rating-value {
       font-size: 2.5rem;
   }
   
   .rating-stars {
       font-size: 1.2rem;
   }
   
   .filter-btn {
       padding: 8px 12px;
       font-size: 0.85rem;
   }
   
   .review-detail-images {
       justify-content: center;
   }
   
   .gallery-image-container {
       width: 120px;
       height: 120px;
   }
}

@media (max-width: 575.98px) {
   .filter-btn {
       padding: 8px 10px;
       font-size: 0.8rem;
   }
   
   .filter-text {
       display: none;
   }
   
   .filter-icon {
       margin: 0;
   }
   
   .filter-btn {
       width: 40px;
       height: 40px;
       justify-content: center;
       padding: 0;
   }
   
   .filter-btn.active {
       width: auto;
       padding: 0 12px;
   }
   
   .filter-btn.active .filter-text {
       display: inline;
       margin-left: 8px;
   }
   
   .add-review-btn {
       width: 50px;
       height: 50px;
       font-size: 1.2rem;
       bottom: 20px;
       right: 20px;
   }
   
   .review-detail-img {
       max-width: 100px;
   }
   
   .gallery-image-container {
       width: 100px;
       height: 100px;
   }
   
   .viewer-nav-btn {
       width: 35px;
       height: 35px;
       font-size: 1rem;
   }
   
   .viewer-close-btn {
       width: 35px;
       height: 35px;
       font-size: 1rem;
   }
}
</style>

