<!-- Header -->
<header class="hero">
   <div class="hero-content">
       <h1 class="gradient-text">Nuestra Galería</h1>
       <p class="header-subtitle">Momentos inolvidables capturados en cada evento</p>
   </div>
</header>

<!-- Featured Gallery -->
<section class="container featured-gallery">
   <div id="featuredCarousel" class="carousel slide" data-bs-ride="carousel">
       <div class="carousel-indicators">
           {{#each featuredImages}}
           <button type="button" data-bs-target="#featuredCarousel" data-bs-slide-to="{{@index}}" {{#if @first}}class="active" aria-current="true"{{/if}} aria-label="Slide {{@index}}"></button>
           {{/each}}
       </div>
       <div class="carousel-inner">
           {{#each featuredImages}}
           <div class="carousel-item {{#if @first}}active{{/if}}">
               <div class="featured-image-wrapper">
                   <img src="{{url_imagen}}" alt="{{titulo}}">
                   <div class="featured-image-overlay">
                       <h3>{{titulo}}</h3>
                       <p>{{descripcion}}</p>
                       <a href="/galeria/{{id}}" class="btn btn-sm btn-gold">Ver detalles</a>
                   </div>
               </div>
           </div>
           {{/each}}
       </div>
       <button class="carousel-control-prev" type="button" data-bs-target="#featuredCarousel" data-bs-slide="prev">
           <span class="carousel-control-prev-icon" aria-hidden="true"></span>
           <span class="visually-hidden">Anterior</span>
       </button>
       <button class="carousel-control-next" type="button" data-bs-target="#featuredCarousel" data-bs-slide="next">
           <span class="carousel-control-next-icon" aria-hidden="true"></span>
           <span class="visually-hidden">Siguiente</span>
       </button>
   </div>
</section>

<!-- Gallery Categories -->
<section class="container">
  <div class="gallery-filter-container">
      <div class="gallery-filter-scroll">
          <button class="gallery-category active" data-category="all">
              <span class="category-icon"><i class="bi bi-grid-3x3-gap"></i></span>
              <span class="category-text">Todos</span>
          </button>
          {{#each popularEventTypes}}
          <button class="gallery-category" data-category="{{id}}">
              <span class="category-icon"><i class="bi {{#if icono}}{{icono}}{{else}}bi-calendar-event{{/if}}"></i></span>
              <span class="category-text">{{nombre}} <span class="event-count">({{count}})</span></span>
          </button>
          {{/each}}
      </div>
      <div class="filter-gradient-overlay"></div>
  </div>

  <!-- Gallery Grid -->
  <div class="gallery-grid">
      {{#each galleryItems}}
      <div class="gallery-item-container" data-category="{{tipo_evento_id}}" data-gallery-id="{{id}}">
          <div class="gallery-item interactive-card" data-bs-toggle="modal" data-bs-target="#galleryModal{{id}}">
              <div class="gallery-image-wrapper">
                  <img src="{{url_imagen}}" alt="{{titulo}}">
                  <div class="gallery-quick-actions">
                      <button class="quick-action-btn view-btn" title="Ver detalles">
                          <i class="bi bi-eye"></i>
                      </button>
                      <button class="quick-action-btn share-btn" data-gallery-id="{{id}}" title="Compartir">
                          <i class="bi bi-share"></i>
                      </button>
                  </div>
              </div>
              <div class="gallery-overlay">
                  <h5 class="gallery-title">{{titulo}}</h5>
                  <p class="gallery-description">{{descripcion}}</p>
                  <span class="gallery-event-type">
                      <i class="bi {{#if eventIcon}}{{eventIcon}}{{else}}bi-calendar-event{{/if}}"></i> {{tipo_evento}}
                  </span>
              </div>
          </div>
      </div>
      {{/each}}
  </div>
  
  <!-- Empty state message -->
  <div class="gallery-empty-state" style="display: none;">
      <div class="empty-state-content">
          <i class="bi bi-images"></i>
          <h4>No se encontraron imágenes</h4>
          <p>No hay imágenes disponibles para la categoría seleccionada.</p>
          <button class="btn btn-gold reset-filter-btn">Ver todas las imágenes</button>
      </div>
  </div>
</section>

<!-- Pagination -->
<nav aria-label="Navegación de galería" class="mt-5">
   <ul class="pagination gallery-pagination justify-content-center">
       {{#if hasPrevPage}}
       <li class="page-item">
           <a class="page-link" href="?page={{prevPage}}{{#if currentCategory}}&tipo={{currentCategory}}{{/if}}" aria-label="Anterior">
               <span aria-hidden="true">&laquo;</span>
           </a>
       </li>
       {{/if}}
       
       {{#each pages}}
       <li class="page-item {{#if active}}active{{/if}}">
           <a class="page-link" href="?page={{number}}{{#if ../currentCategory}}&tipo={{../currentCategory}}{{/if}}">{{number}}</a>
       </li>
       {{/each}}
       
       {{#if hasNextPage}}
       <li class="page-item">
           <a class="page-link" href="?page={{nextPage}}{{#if currentCategory}}&tipo={{currentCategory}}{{/if}}" aria-label="Siguiente">
               <span aria-hidden="true">&raquo;</span>
           </a>
       </li>
       {{/if}}
   </ul>
</nav>

<!-- Gallery Modals - IMPROVED VERSION -->
{{#each galleryItems}}
<div class="modal fade gallery-modal" id="galleryModal{{id}}" tabindex="-1" aria-labelledby="galleryModal{{id}}Label" aria-hidden="true">
   <div class="modal-dialog modal-xl modal-dialog-centered">
       <div class="modal-content">
           <div class="modal-header">
               <h5 class="modal-title" id="galleryModal{{id}}Label">
                   <i class="bi {{#if eventIcon}}{{eventIcon}}{{else}}bi-calendar-event{{/if}}"></i> {{titulo}}
               </h5>
               <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
           </div>
           <div class="modal-body p-0">
               <div class="gallery-modal-container">
                   <div class="gallery-modal-image-wrapper">
                       <div class="gallery-modal-image-container">
                           <img src="{{url_imagen   }}" alt="{{titulo}}" class="gallery-modal-image">
                           
                           <!-- Zoom controls -->
                           <div class="zoom-controls">
                               <button class="zoom-btn zoom-in-btn" title="Acercar">
                                   <i class="bi bi-zoom-in"></i>
                               </button>
                               <button class="zoom-btn zoom-out-btn" title="Alejar">
                                   <i class="bi bi-zoom-out"></i>
                               </button>
                               <button class="zoom-btn zoom-reset-btn" title="Restablecer zoom">
                                   <i class="bi bi-arrows-fullscreen"></i>
                               </button>
                           </div>
                           
                           <!-- Controles de navegación -->
                           <div class="gallery-modal-nav">
                               <button class="gallery-nav-btn prev-btn" data-gallery-id="{{id}}" data-action="prev">
                                   <i class="bi bi-chevron-left"></i>
                               </button>
                               <button class="gallery-nav-btn next-btn" data-gallery-id="{{id}}" data-action="next">
                                   <i class="bi bi-chevron-right"></i>
                               </button>
                           </div>
                       </div>
                   </div>
                   
                   <div class="gallery-modal-sidebar">
                       <div class="gallery-modal-info">
                           <div class="gallery-modal-description">
                               <p>{{descripcion}}</p>
                           </div>
                           
                           <div class="gallery-modal-meta">
                               <div class="gallery-meta-item">
                                   <div class="meta-icon">
                                       <i class="bi {{#if eventIcon}}{{eventIcon}}{{else}}bi-calendar-event{{/if}}"></i>
                                   </div>
                                   <div class="meta-content">
                                       <span class="meta-label">Tipo de evento</span>
                                       <span class="meta-value">{{tipo_evento}}</span>
                                   </div>
                               </div>
                               
                               {{#if fecha}}
                               <div class="gallery-meta-item">
                                   <div class="meta-icon">
                                       <i class="bi bi-calendar-date"></i>
                                   </div>
                                   <div class="meta-content">
                                       <span class="meta-label">Fecha</span>
                                       <span class="meta-value">{{fecha}}</span>
                                   </div>
                               </div>
                               {{/if}}
                               
                               {{#if ubicacion}}
                               <div class="gallery-meta-item">
                                   <div class="meta-icon">
                                       <i class="bi bi-geo-alt"></i>
                                   </div>
                                   <div class="meta-content">
                                       <span class="meta-label">Ubicación</span>
                                       <span class="meta-value">{{ubicacion}}</span>
                                   </div>
                               </div>
                               {{/if}}
                           </div>
                           
                           <div class="gallery-modal-actions">
                               <button class="gallery-action-btn btn-gold gallery-share-btn" data-gallery-id="{{id}}">
                                   <i class="bi bi-share"></i>
                                   <span>Compartir</span>
                               </button>
                               <a href="/galeria/tipo/{{tipo_evento_id}}" class="gallery-action-btn gallery-more-btn btn-gold">
                                   <i class="bi bi-images"></i>
                                   <span>Ver más como esta</span>
                               </a>
                           </div>
                       </div>
                   </div>
               </div>
           </div>
           <div class="modal-footer">
               <div class="modal-footer-info">
                   <span class="image-counter">Imagen <span class="current-image">1</span> de <span class="total-images">{{../galleryItems.length}}</span></span>
               </div>
               <div class="modal-footer-actions">
                   <button type="button" class="btn btn-outline-light" data-bs-dismiss="modal">Cerrar</button>
                   <a href="{{url_imagen_completa}}" class="btn btn-gold" download="{{titulo}}.jpg">
                       <i class="bi bi-download"></i> Descargar
                   </a>
               </div>
           </div>
       </div>
   </div>
</div>
{{/each}}

<!-- Toast para notificaciones -->
<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
   <div id="shareToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
       <div class="toast-header">
           <i class="bi bi-check-circle-fill me-2 text-success"></i>
           <strong class="me-auto">Enlace copiado</strong>
           <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
       </div>
       <div class="toast-body">
           El enlace ha sido copiado al portapapeles.
       </div>
   </div>
</div>

<script>
   document.addEventListener('DOMContentLoaded', function() {
       // Inicializar toast
       const shareToast = new bootstrap.Toast(document.getElementById('shareToast'));
       
       // Verificar si hay un ID de tipo de evento o imagen en la URL
       const urlParams = new URLSearchParams(window.location.search);
       const eventTypeId = urlParams.get('tipo');
       const galleryId = urlParams.get('id');
       
       // Establecer el filtro activo basado en la URL
       if (eventTypeId) {
           const categoryButtons = document.querySelectorAll('.gallery-category');
           categoryButtons.forEach(button => {
               button.classList.remove('active');
               if (button.getAttribute('data-category') === eventTypeId) {
                   button.classList.add('active');
               }
           });
           
           // Filtrar las imágenes
           filterGalleryItems(eventTypeId);
       } else {
           // Si no hay filtro, activar "Todos"
           document.querySelector('.gallery-category[data-category="all"]').classList.add('active');
       }
       
       // Si hay un ID de imagen específico, resaltar esa imagen
       if (galleryId) {
           const galleryItems = document.querySelectorAll('.gallery-item-container');
           let targetItem = null;
           
           galleryItems.forEach(item => {
               if (item.getAttribute('data-gallery-id') === galleryId) {
                   targetItem = item;
                   item.querySelector('.gallery-item').classList.add('highlighted-gallery-item');
                   item.querySelector('.gallery-item').setAttribute('data-highlight-text', 'Imagen seleccionada');
               }
           });
           
           // Desplazarse a la imagen seleccionada
           if (targetItem) {
               setTimeout(() => {
                   targetItem.scrollIntoView({ behavior: 'smooth', block: 'center' });
                   
                   // Opcional: Abrir automáticamente el modal con los detalles
                   setTimeout(() => {
                       const modalId = `galleryModal${galleryId}`;
                       const modal = document.getElementById(modalId);
                       if (modal) {
                           const bsModal = new bootstrap.Modal(modal);
                           bsModal.show();
                       }
                   }, 800);
               }, 500);
           }
       }
       
       // Función para filtrar elementos de la galería
       function filterGalleryItems(category) {
           const galleryItems = document.querySelectorAll('.gallery-item-container');
           const emptyState = document.querySelector('.gallery-empty-state');
           let visibleCount = 0;
           
           galleryItems.forEach(item => {
               if (category === 'all' || item.getAttribute('data-category') === category) {
                   item.style.display = 'block';
                   setTimeout(() => {
                       item.style.opacity = '1';
                       item.style.transform = 'scale(1)';
                   }, 50);
                   visibleCount++;
               } else {
                   item.style.opacity = '0';
                   item.style.transform = 'scale(0.8)';
                   setTimeout(() => {
                       item.style.display = 'none';
                   }, 300);
               }
           });
           
           // Mostrar mensaje de estado vacío si no hay elementos
           if (visibleCount === 0) {
               emptyState.style.display = 'flex';
           } else {
               emptyState.style.display = 'none';
           }
           
           // Actualizar URL para compartir
           const shareUrl = new URL(window.location.href);
           if (category !== 'all') {
               shareUrl.searchParams.set('tipo', category);
           } else {
               shareUrl.searchParams.delete('tipo');
           }
           window.history.replaceState({}, '', shareUrl);
       }
       
       // Funcionalidad de filtrado
       const categoryButtons = document.querySelectorAll('.gallery-category');
       
       categoryButtons.forEach(button => {
           button.addEventListener('click', function() {
               const category = this.getAttribute('data-category');
               
               // Update active button
               categoryButtons.forEach(btn => btn.classList.remove('active'));
               this.classList.add('active');
               
               // Filtrar elementos de la galería
               filterGalleryItems(category);
           });
       });
       
       // Botón para resetear filtros
       const resetFilterBtn = document.querySelector('.reset-filter-btn');
       if (resetFilterBtn) {
           resetFilterBtn.addEventListener('click', function() {
               const allCategoryBtn = document.querySelector('.gallery-category[data-category="all"]');
               allCategoryBtn.click();
           });
       }

       // Compartir imagen
       const shareButtons = document.querySelectorAll('.gallery-share-btn, .share-btn');
       shareButtons.forEach(button => {
           button.addEventListener('click', function(e) {
               e.preventDefault();
               e.stopPropagation(); // Prevenir que se abra el modal si se hace clic en el botón de compartir
               
               const galleryId = this.getAttribute('data-gallery-id');
               const shareUrl = new URL(window.location.href);
               shareUrl.searchParams.set('id', galleryId);
               
               if (navigator.share) {
                   navigator.share({
                       title: 'Galería de Plato y Copa',
                       text: 'Mira esta imagen de la galería de Plato y Copa',
                       url: shareUrl.toString()
                   })
                   .catch(console.error);
               } else {
                   // Fallback para navegadores que no soportan Web Share API
                   navigator.clipboard.writeText(shareUrl.toString())
                       .then(() => {
                           shareToast.show();
                       })
                       .catch(err => {
                           console.error('Error al copiar: ', err);
                       });
               }
           });
       });

       // Detectar scroll horizontal en filtros
       const filterContainer = document.querySelector('.gallery-filter-scroll');
       if (filterContainer) {
           filterContainer.addEventListener('scroll', function() {
               const isScrollEnd = this.scrollLeft + this.offsetWidth >= this.scrollWidth - 20;
               const gradientOverlay = document.querySelector('.filter-gradient-overlay');
               
               if (isScrollEnd) {
                   gradientOverlay.style.opacity = '0';
               } else {
                   gradientOverlay.style.opacity = '1';
               }
           });
       }

       // Añadir animación de entrada a las imágenes
       const galleryItems = document.querySelectorAll('.gallery-item-container');
       const observer = new IntersectionObserver((entries) => {
           entries.forEach(entry => {
               if (entry.isIntersecting) {
                   entry.target.classList.add('animate-fadeIn');
                   observer.unobserve(entry.target);
               }
           });
       }, { threshold: 0.1 });

       galleryItems.forEach((item, index) => {
           item.style.animationDelay = `${index * 0.1}s`;
           observer.observe(item);
       });
       
       // Navegación entre imágenes en el modal
       const navButtons = document.querySelectorAll('.gallery-nav-btn');
       navButtons.forEach(button => {
           button.addEventListener('click', function(e) {
               e.preventDefault();
               e.stopPropagation();
               
               const galleryId = this.getAttribute('data-gallery-id');
               const action = this.getAttribute('data-action');
               const currentModal = document.getElementById(`galleryModal${galleryId}`);
               
               // Encontrar todas las imágenes de la galería
               const galleryItems = document.querySelectorAll('.gallery-item-container');
               const galleryIds = Array.from(galleryItems).map(item => item.getAttribute('data-gallery-id'));
               
               // Encontrar el índice actual
               const currentIndex = galleryIds.indexOf(galleryId);
               let nextIndex;
               
               if (action === 'next') {
                   nextIndex = (currentIndex + 1) % galleryIds.length;
               } else {
                   nextIndex = (currentIndex - 1 + galleryIds.length) % galleryIds.length;
               }
               
               // Cerrar el modal actual
               const bsCurrentModal = bootstrap.Modal.getInstance(currentModal);
               bsCurrentModal.hide();
               
               // Abrir el siguiente modal
               setTimeout(() => {
                   const nextModalId = `galleryModal${galleryIds[nextIndex]}`;
                   const nextModal = document.getElementById(nextModalId);
                   if (nextModal) {
                       const bsNextModal = new bootstrap.Modal(nextModal);
                       bsNextModal.show();
                       
                       // Actualizar contador de imágenes
                       const counter = nextModal.querySelector('.current-image');
                       if (counter) {
                           counter.textContent = nextIndex + 1;
                       }
                   }
               }, 500);
           });
       });
       
       // Funcionalidad de zoom para las imágenes del modal
       document.querySelectorAll('.gallery-modal').forEach(modal => {
           const image = modal.querySelector('.gallery-modal-image');
           const zoomInBtn = modal.querySelector('.zoom-in-btn');
           const zoomOutBtn = modal.querySelector('.zoom-out-btn');
           const zoomResetBtn = modal.querySelector('.zoom-reset-btn');
           
           let scale = 1;
           let panning = false;
           let pointX = 0;
           let pointY = 0;
           let start = { x: 0, y: 0 };
           
           function setTransform() {
               image.style.transform = `translate(${pointX}px, ${pointY}px) scale(${scale})`;
           }
           
           function resetTransform() {
               scale = 1;
               pointX = 0;
               pointY = 0;
               setTransform();
           }
           
           if (zoomInBtn) {
               zoomInBtn.addEventListener('click', function() {
                   scale += 0.25;
                   if (scale > 3) scale = 3; // Limitar zoom máximo
                   setTransform();
               });
           }
           
           if (zoomOutBtn) {
               zoomOutBtn.addEventListener('click', function() {
                   scale -= 0.25;
                   if (scale < 0.5) scale = 0.5; // Limitar zoom mínimo
                   setTransform();
               });
           }
           
           if (zoomResetBtn) {
               zoomResetBtn.addEventListener('click', resetTransform);
           }
           
           if (image) {
               // Doble clic para zoom
               image.addEventListener('dblclick', function(e) {
                   e.preventDefault();
                   if (scale === 1) {
                       scale = 2;
                       // Centrar en el punto de doble clic
                       const rect = image.getBoundingClientRect();
                       pointX = (rect.width / 2 - (e.clientX - rect.left)) * (scale - 1);
                       pointY = (rect.height / 2 - (e.clientY - rect.top)) * (scale - 1);
                   } else {
                       resetTransform();
                   }
                   setTransform();
               });
               
               // Arrastrar la imagen cuando está ampliada
               image.addEventListener('mousedown', function(e) {
                   e.preventDefault();
                   if (scale > 1) {
                       panning = true;
                       start = { x: e.clientX - pointX, y: e.clientY - pointY };
                   }
               });
               
               image.addEventListener('mousemove', function(e) {
                   e.preventDefault();
                   if (panning && scale > 1) {
                       pointX = e.clientX - start.x;
                       pointY = e.clientY - start.y;
                       setTransform();
                   }
               });
               
               image.addEventListener('mouseup', function(e) {
                   panning = false;
               });
               
               image.addEventListener('mouseleave', function(e) {
                   panning = false;
               });
               
               // Soporte para gestos táctiles
               image.addEventListener('touchstart', function(e) {
                   e.preventDefault();
                   if (scale > 1 && e.touches.length === 1) {
                       panning = true;
                       start = { x: e.touches[0].clientX - pointX, y: e.touches[0].clientY - pointY };
                   }
               });
               
               image.addEventListener('touchmove', function(e) {
                   e.preventDefault();
                   if (panning && scale > 1 && e.touches.length === 1) {
                       pointX = e.touches[0].clientX - start.x;
                       pointY = e.touches[0].clientY - start.y;
                       setTransform();
                   }
               });
               
               image.addEventListener('touchend', function(e) {
                   panning = false;
               });
           }
           
           // Resetear zoom al cerrar el modal
           modal.addEventListener('hidden.bs.modal', resetTransform);
       });
       
       // Inicializar contadores de imágenes
       document.querySelectorAll('.gallery-modal').forEach((modal, index) => {
           const counter = modal.querySelector('.current-image');
           if (counter) {
               counter.textContent = index + 1;
           }
       });
   });
</script>

<style>
   /* Estilos para la galería */
   .featured-gallery {
       margin-bottom: 3rem;
   }
   
   /* Contenedor para imágenes destacadas con tamaño fijo */
   .featured-image-wrapper {
       height: 500px;
       width: 100%;
       overflow: hidden;
       position: relative;
       border-radius: var(--border-radius);
       box-shadow: var(--shadow-dark);
   }
   
   .featured-image-wrapper img {
       position: absolute;
       top: 0;
       left: 0;
       width: 100%;
       height: 100%;
       object-fit: cover;
       transition: transform 0.8s ease;
   }
   
   .carousel-item:hover .featured-image-wrapper img {
       transform: scale(1.05);
   }
   
   /* Overlay para imágenes destacadas */
   .featured-image-overlay {
       position: absolute;
       bottom: 0;
       left: 0;
       right: 0;
       background: linear-gradient(to top, rgba(0, 0, 0, 0.9), transparent);
       padding: 30px 20px 20px;
       color: var(--white);
       opacity: 0;
       transform: translateY(20px);
       transition: all 0.5s ease;
   }
   
   .carousel-item:hover .featured-image-overlay {
       opacity: 1;
       transform: translateY(0);
   }
   
   .featured-image-overlay h3 {
       color: var(--gold);
       margin-bottom: 10px;
       font-size: 1.5rem;
   }
   
   .featured-image-overlay p {
       color: var(--white-dim);
       margin-bottom: 15px;
       font-size: 1rem;
   }
   
   /* Indicadores del carrusel */
   .carousel-indicators {
       margin-bottom: -1.5rem;
   }
   
   .carousel-indicators button {
       width: 12px;
       height: 12px;
       border-radius: 50%;
       background-color: rgba(229, 199, 107, 0.3);
       border: 1px solid var(--gold-border);
       margin: 0 5px;
       transition: all 0.3s ease;
   }
   
   .carousel-indicators button.active {
       background-color: var(--gold);
       transform: scale(1.2);
   }
   
   /* Categorías de galería */
   .gallery-filter-container {
       position: relative;
       margin: 2rem 0;
       padding-bottom: 5px;
   }
   
   .gallery-filter-scroll {
       display: flex;
       gap: 10px;
       overflow-x: auto;
       padding: 10px 5px;
       -webkit-overflow-scrolling: touch;
       scrollbar-width: none; /* Firefox */
       -ms-overflow-style: none; /* IE/Edge */
   }
   
   .gallery-filter-scroll::-webkit-scrollbar {
       display: none; /* Chrome/Safari/Opera */
   }
   
   .filter-gradient-overlay {
       position: absolute;
       top: 0;
       right: 0;
       width: 60px;
       height: 100%;
       background: linear-gradient(to right, transparent, var(--black));
       pointer-events: none;
       opacity: 1;
       transition: opacity 0.3s ease;
   }
   
   .gallery-category {
       background: linear-gradient(145deg, rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.4));
       border: 1px solid var(--gold-border);
       color: var(--white);
       padding: 10px 16px;
       border-radius: 50px;
       font-size: 0.9rem;
       transition: all 0.3s ease;
       cursor: pointer;
       display: flex;
       align-items: center;
       gap: 8px;
       white-space: nowrap;
       min-height: 44px;
       box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
   }
   
   .category-icon {
       display: flex;
       align-items: center;
       justify-content: center;
       color: var(--gold);
   }
   
   .gallery-category.active,
   .gallery-category:hover {
       background: linear-gradient(to right, var(--gold), var(--gold-dark));
       color: var(--black);
       border-color: var(--gold);
       transform: translateY(-2px);
       box-shadow: 0 4px 10px rgba(229, 199, 107, 0.3);
   }
   
   .gallery-category.active .category-icon,
   .gallery-category:hover .category-icon {
       color: var(--black);
   }
   
   .event-count {
       font-size: 0.8rem;
       opacity: 0.8;
   }
   
   /* Grid de galería */
   .gallery-grid {
       display: grid;
       grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
       gap: 20px;
       margin-top: 2rem;
   }
   
   .gallery-item-container {
       transition: opacity 0.3s ease, transform 0.3s ease;
   }
   
   /* Elemento de galería */
   .gallery-item {
       position: relative;
       border-radius: var(--border-radius);
       overflow: hidden;
       box-shadow: var(--shadow-dark);
       cursor: pointer;
       transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
       height: 100%;
   }
   
   .gallery-item:hover {
       transform: translateY(-10px);
       box-shadow: var(--shadow-gold), 0 15px 30px rgba(0, 0, 0, 0.3);
   }
   
   /* Contenedor de imagen con relación de aspecto fija */
   .gallery-image-wrapper {
       position: relative;
       padding-bottom: 75%; /* Relación de aspecto 4:3 */
       overflow: hidden;
   }
   
   .gallery-image-wrapper img {
       position: absolute;
       top: 0;
       left: 0;
       width: 100%;
       height: 100%;
       object-fit: cover;
       transition: transform 0.8s ease;
   }
   
   .gallery-item:hover .gallery-image-wrapper img {
       transform: scale(1.1);
   }
   
   /* Acciones rápidas */
   .gallery-quick-actions {
       position: absolute;
       top: 10px;
       right: 10px;
       display: flex;
       gap: 8px;
       opacity: 0;
       transform: translateY(-10px);
       transition: all 0.3s ease;
       z-index: 2;
   }
   
   .gallery-item:hover .gallery-quick-actions {
       opacity: 1;
       transform: translateY(0);
   }
   
   .quick-action-btn {
       width: 36px;
       height: 36px;
       border-radius: 50%;
       background: rgba(0, 0, 0, 0.6);
       border: 1px solid var(--gold-border);
       color: var(--gold);
       display: flex;
       align-items: center;
       justify-content: center;
       cursor: pointer;
       transition: all 0.3s ease;
   }
   
   .quick-action-btn:hover {
       background: var(--gold);
       color: var(--black);
       transform: scale(1.1);
   }
   
   /* Overlay de información */
   .gallery-overlay {
       position: absolute;
       bottom: 0;
       left: 0;
       right: 0;
       background: linear-gradient(to top, rgba(0, 0, 0, 0.9), transparent);
       padding: 30px 20px 15px;
       transform: translateY(70%);
       transition: transform 0.4s ease;
   }
   
   .gallery-item:hover .gallery-overlay {
       transform: translateY(0);
   }
   
   .gallery-title {
       color: var(--gold);
       font-size: 1.1rem;
       margin-bottom: 8px;
       font-weight: 500;
   }
   
   .gallery-description {
       color: var(--white-dim);
       font-size: 0.9rem;
       margin-bottom: 10px;
       opacity: 0;
       transform: translateY(20px);
       transition: all 0.4s ease 0.1s;
   }
   
   .gallery-item:hover .gallery-description {
       opacity: 1;
       transform: translateY(0);
   }
   
   .gallery-event-type {
       display: inline-flex;
       align-items: center;
       background: linear-gradient(145deg, rgba(229, 199, 107, 0.2), rgba(229, 199, 107, 0.1));
       color: var(--gold);
       font-size: 0.8rem;
       padding: 4px 10px;
       border-radius: 50px;
       border: 1px solid var(--gold-border);
       gap: 5px;
       opacity: 0;
       transform: translateY(20px);
       transition: all 0.4s ease 0.2s;
   }
   
   .gallery-item:hover .gallery-event-type {
       opacity: 1;
       transform: translateY(0);
   }
   
   /* Estado vacío */
   .gallery-empty-state {
       display: none;
       justify-content: center;
       align-items: center;
       min-height: 300px;
       margin: 2rem 0;
   }
   
   .empty-state-content {
       text-align: center;
       padding: 2rem;
       background: linear-gradient(145deg, rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.4));
       border: 1px solid var(--gold-border);
       border-radius: var(--border-radius);
       max-width: 500px;
   }
   
   .empty-state-content i {
       font-size: 3rem;
       color: var(--gold);
       margin-bottom: 1rem;
       opacity: 0.5;
   }
   
   .empty-state-content h4 {
       color: var(--gold);
       margin-bottom: 0.5rem;
   }
   
   .empty-state-content p {
       color: var(--white-dim);
       margin-bottom: 1.5rem;
   }
   
   /* Paginación */
   .gallery-pagination {
       margin-top: 3rem;
   }
   
   .page-item {
       margin: 0 3px;
   }
   
   .page-link {
       width: 40px;
       height: 40px;
       display: flex;
       align-items: center;
       justify-content: center;
       border-radius: 50%;
       background: linear-gradient(145deg, rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.4));
       border: 1px solid var(--gold-border);
       color: var(--gold);
       transition: all 0.3s ease;
   }
   
   .page-item.active .page-link,
   .page-link:hover {
       background: linear-gradient(to right, var(--gold), var(--gold-dark));
       color: var(--black);
       border-color: var(--gold);
       transform: translateY(-2px);
       box-shadow: 0 4px 10px rgba(229, 199, 107, 0.3);
   }
   
   /* Modal de galería - VERSIÓN MEJORADA */
   .gallery-modal .modal-dialog {
       max-width: 95%;
       margin: 1rem auto;
   }

   .gallery-modal .modal-content {
       background: linear-gradient(145deg, rgba(17, 17, 17, 0.98), rgba(0, 0, 0, 0.98));
       border: 1px solid var(--gold-border);
       border-radius: var(--border-radius);
       overflow: hidden;
   }
   
   .gallery-modal .modal-header {
       border-bottom: 1px solid rgba(229, 199, 107, 0.2);
       padding: 1rem 1.5rem;
       background: linear-gradient(to right, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.6));
   }
   
   .gallery-modal .modal-title {
       color: var(--gold);
       font-size: 1.25rem;
       display: flex;
       align-items: center;
       gap: 10px;
   }
   
   .gallery-modal .modal-title i {
       color: var(--gold);
   }
   
   .gallery-modal .btn-close-white {
       filter: brightness(0) invert(1) sepia(100%) saturate(500%) hue-rotate(330deg);
       opacity: 0.8;
       transition: all 0.3s ease;
   }
   
   .gallery-modal .btn-close-white:hover {
       opacity: 1;
       transform: rotate(90deg);
   }

   .gallery-modal-container {
       display: flex;
       flex-direction: row;
       height: auto;
   }
   
   .gallery-modal-image-wrapper {
       flex: 1;
       position: relative;
       background-color: rgba(0, 0, 0, 0.5);
       display: flex;
       align-items: center;
       justify-content: center;
       overflow: hidden;
   }
   
   .gallery-modal-image-container {
       position: relative;
       width: 100%;
       height: 70vh;
       max-height: 600px;
       display: flex;
       align-items: center;
       justify-content: center;
       overflow: hidden;
   }
   
   .gallery-modal-image {
       max-width: 100%;
       max-height: 100%;
       object-fit: contain;
       transition: transform 0.3s ease;
       cursor: grab;
   }
   
   .gallery-modal-image:active {
       cursor: grabbing;
   }
   
   /* Controles de zoom */
   .zoom-controls {
       position: absolute;
       bottom: 15px;
       left: 50%;
       transform: translateX(-50%);
       display: flex;
       gap: 10px;
       z-index: 5;
       background: rgba(0, 0, 0, 0.6);
       border-radius: 30px;
       padding: 5px 10px;
       border: 1px solid var(--gold-border);
   }
   
   .zoom-btn {
       width: 36px;
       height: 36px;
       border-radius: 50%;
       background: rgba(0, 0, 0, 0.5);
       border: 1px solid var(--gold-border);
       color: var(--gold);
       display: flex;
       align-items: center;
       justify-content: center;
       cursor: pointer;
       transition: all 0.3s ease;
   }
   
   .zoom-btn:hover {
       background: var(--gold);
       color: var(--black);
       transform: scale(1.1);
   }
   
   .gallery-modal-nav {
       position: absolute;
       top: 0;
       left: 0;
       right: 0;
       bottom: 0;
       display: flex;
       justify-content: space-between;
       align-items: center;
       padding: 0 20px;
       opacity: 0;
       transition: opacity 0.3s ease;
   }
   
   .gallery-modal-image-container:hover .gallery-modal-nav {
       opacity: 1;
   }
   
   .gallery-nav-btn {
       width: 50px;
       height: 50px;
       border-radius: 50%;
       background: rgba(0, 0, 0, 0.7);
       border: 1px solid var(--gold-border);
       color: var(--gold);
       display: flex;
       align-items: center;
       justify-content: center;
       font-size: 1.5rem;
       cursor: pointer;
       transition: all 0.3s ease;
       z-index: 5;
   }
   
   .gallery-nav-btn:hover {
       background: var(--gold);
       color: var(--black);
       transform: scale(1.1);
   }
   
   .gallery-modal-sidebar {
       width: 350px;
       background: linear-gradient(145deg, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.5));
       border-left: 1px solid var(--gold-border);
       overflow-y: auto;
       scrollbar-width: thin;
       scrollbar-color: var(--gold) rgba(0, 0, 0, 0.3);
   }
   
   .gallery-modal-sidebar::-webkit-scrollbar {
       width: 6px;
   }
   
   .gallery-modal-sidebar::-webkit-scrollbar-track {
       background: rgba(0, 0, 0, 0.3);
   }
   
   .gallery-modal-sidebar::-webkit-scrollbar-thumb {
       background-color: var(--gold);
       border-radius: 10px;
   }
   
   .gallery-modal-info {
       padding: 25px;
   }
   
   .gallery-modal-description {
       color: var(--white-dim);
       font-size: 1rem;
       line-height: 1.6;
       margin-bottom: 25px;
       padding-bottom: 20px;
       border-bottom: 1px solid rgba(229, 199, 107, 0.2);
   }
   
   .gallery-modal-meta {
       margin-bottom: 25px;
   }
   
   .gallery-meta-item {
       display: flex;
       align-items: flex-start;
       margin-bottom: 15px;
   }
   
   .meta-icon {
       width: 40px;
       height: 40px;
       background: linear-gradient(145deg, rgba(229, 199, 107, 0.2), rgba(229, 199, 107, 0.1));
       color: var(--gold);
       border-radius: 50%;
       display: flex;
       align-items: center;
       justify-content: center;
       font-size: 1.2rem;
       margin-right: 15px;
       flex-shrink: 0;
   }
   
   .meta-content {
       display: flex;
       flex-direction: column;
   }
   
   .meta-label {
       color: var(--gold);
       font-size: 0.85rem;
       margin-bottom: 5px;
   }
   
   .meta-value {
       color: var(--white);
       font-size: 1rem;
   }
   
   .gallery-modal-actions {
       display: flex;
       flex-direction: column;
       gap: 10px;
   }
   
   .gallery-action-btn {
       display: flex;
       align-items: center;
       justify-content: center;
       gap: 10px;
       padding: 12px 20px;
       border-radius: 50px;
       font-size: 1rem;
       font-weight: 500;
       transition: all 0.3s ease;
       cursor: pointer;
       text-decoration: none;
   }
   
   .gallery-share-btn {
   }
   
   .gallery-share-btn:hover {
   }
   
   .gallery-more-btn {
    
   }
   
   .gallery-more-btn:hover {
       
   }
   
   /* Footer del modal */
   .gallery-modal .modal-footer {
       border-top: 1px solid rgba(229, 199, 107, 0.2);
       padding: 1rem 1.5rem;
       display: flex;
       justify-content: space-between;
       align-items: center;
       background: linear-gradient(to right, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.6));
   }
   
   .modal-footer-info {
       color: var(--white-dim);
       font-size: 0.9rem;
   }
   
   .image-counter {
       display: flex;
       align-items: center;
       gap: 5px;
   }
   
   .current-image, .total-images {
       color: var(--gold);
       font-weight: 500;
   }
   
   .modal-footer-actions {
       display: flex;
       gap: 10px;
   }
   
   /* Animaciones */
   @keyframes fadeIn {
       from {
           opacity: 0;
           transform: translateY(10px);
       }
       to {
           opacity: 1;
           transform: translateY(0);
       }
   }
   
   /* Responsive para el modal de galería */
   @media (max-width: 1200px) {
       .gallery-modal .modal-dialog {
           max-width: 95%;
       }
       
       .gallery-modal-image-container {
           height: 60vh;
       }
   }
   
   @media (max-width: 991.98px) {
       .gallery-modal .modal-dialog {
           max-width: 95%;
       }
       
       .gallery-modal-container {
           flex-direction: column;
       }
       
       .gallery-modal-image-wrapper,
       .gallery-modal-sidebar {
           width: 100%;
       }
       
       .gallery-modal-image-container {
           height: 50vh;
       }
       
       .gallery-modal-sidebar {
           border-left: none;
           border-top: 1px solid var(--gold-border);
           max-height: 30vh;
       }
       
       .zoom-controls {
           bottom: 10px;
       }
   }
   
   @media (max-width: 767.98px) {
       .gallery-modal .modal-dialog {
           max-width: 100%;
           margin: 0.5rem;
       }
       
       .gallery-modal-image-container {
           height: 40vh;
       }
       
       .gallery-nav-btn {
           width: 40px;
           height: 40px;
           font-size: 1.2rem;
       }
       
       .zoom-btn {
           width: 32px;
           height: 32px;
           font-size: 0.9rem;
       }
       
       .gallery-modal-info {
           padding: 15px;
       }
       
       .gallery-modal-description {
           font-size: 0.9rem;
           margin-bottom: 15px;
           padding-bottom: 15px;
       }
       
       .meta-icon {
           width: 32px;
           height: 32px;
           font-size: 1rem;
           margin-right: 10px;
       }
       
       .meta-label {
           font-size: 0.8rem;
       }
       
       .meta-value {
           font-size: 0.9rem;
       }
       
       .gallery-action-btn {
           padding: 10px 15px;
           font-size: 0.9rem;
       }
       
       .modal-footer-info, .modal-footer-actions {
           font-size: 0.8rem;
       }
   }
   
   @media (max-width: 575.98px) {
       .gallery-modal-image-container {
           height: 35vh;
       }
       
       .gallery-modal-sidebar {
           max-height: 35vh;
       }
       
       .gallery-modal .modal-header {
           padding: 0.75rem 1rem;
       }
       
       .gallery-modal .modal-title {
           font-size: 1rem;
       }
       
       .gallery-modal .modal-footer {
           padding: 0.75rem 1rem;
           flex-direction: column;
           gap: 10px;
           align-items: flex-start;
       }
       
       .zoom-controls {
           bottom: 5px;
           padding: 3px 8px;
       }
       
       .zoom-btn {
           width: 28px;
           height: 28px;
           font-size: 0.8rem;
       }
       
       .gallery-nav-btn {
           width: 35px;
           height: 35px;
           font-size: 1rem;
       }
   }
</style>
